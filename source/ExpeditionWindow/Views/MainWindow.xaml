<metro:MetroWindow x:Class="Grabacr07.KanColleViewer.Plugins.ExpeditionMonitor.Views.MainWindow"
				   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
				   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				   xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
				   xmlns:metro="clr-namespace:MetroRadiance.Controls;assembly=MetroRadiance"
				   xmlns:mtiv="http://schemes.grabacr.net/winfx/2015/personal/interactivity"
				   xmlns:kcvc="http://schemes.grabacr.net/winfx/2015/kancolleviewer/controls"
				   xmlns:m="clr-namespace:Grabacr07.KanColleViewer.Plugins.ExpeditionMonitor.Models"
				   xmlns:vm="clr-namespace:Grabacr07.KanColleViewer.Plugins.ExpeditionMonitor.ViewModels"
				   mc:Ignorable="d"
				   d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
				   Title="{Binding Title}"
				   Width="290"
				   Height="290"
				   Topmost="{Binding Source={x:Static m:MainWindowSettings.TopMost}, Path=Value, Mode=TwoWay}"
				   Background="{DynamicResource ThemeBrushKey}"
				   Foreground="{DynamicResource ActiveForegroundBrushKey}"
				   IsRestoringWindowPlacement="True"
				   SnapsToDevicePixels="True"
				   TextOptions.TextFormattingMode="Display"
				   UseLayoutRounding="True">

	<i:Interaction.Behaviors>
		<livet:WindowCloseCancelBehavior CloseCanceledCallbackMethodTarget="{Binding}"
										 CloseCanceledCallbackMethodName="CloseCanceledCallback"
										 CanClose="{Binding CanClose}" />
	</i:Interaction.Behaviors>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="ContentRendered">
			<livet:LivetCallMethodAction MethodTarget="{Binding}"
										 MethodName="Initialize" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closed">
			<livet:DataContextDisposeAction />
		</i:EventTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.WindowAction">
			<livet:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition.Child">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="True" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.UpdateTaskbar">
			<mtiv:TaskbarMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
	</i:Interaction.Triggers>

	<DockPanel>
		<!-- #region Caption area -->
		<DockPanel DockPanel.Dock="Top"
				   metro:MetroWindow.IsCaptionBar="True">
			<Border DockPanel.Dock="Bottom"
					Height="4" />
			<kcvc:AppIcon Width="36"
						  Height="36"
						  Background="Transparent"
						  AnchorVisibility="Collapsed"
						  BandVisibility="Collapsed" />

			<StackPanel DockPanel.Dock="Right"
						Orientation="Horizontal"
						HorizontalAlignment="Right"
						VerticalAlignment="Top"
						WindowChrome.IsHitTestVisibleInChrome="True">
				<metro:CaptionButton IsChecked="{Binding Source={x:Static m:MainWindowSettings.TopMost}, Path=Value, Mode=TwoWay}"
									 Style="{DynamicResource PinButtonStyleKey}" />
				<metro:SystemButtons />
			</StackPanel>
			<TextBlock Text="{Binding Title}"
					   Style="{DynamicResource CaptionTextStyleKey}"
					   Margin="2,0,8,0" />
		</DockPanel>
		<!-- #endregion -->

		<StackPanel Margin="4">
			<ItemsControl ItemsSource="{Binding Expeditions}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Border x:Name="Border"
								BorderThickness="1"
								BorderBrush="{DynamicResource BorderBrushKey}"
								Padding="4"
								Margin="4">
							<DockPanel>
								<TextBlock Text="{Binding Id, Mode=OneWay}"
										   Style="{DynamicResource EmphaticTextStyleKey}"
										   FontSize="18"
										   VerticalAlignment="Center"
										   Margin="8,2" />
								<TextBlock x:Name="Mission"
										   DockPanel.Dock="Top"
										   Text="{Binding Source.Mission.Title}"
										   Style="{DynamicResource DefaultTextStyleKey}"
										   FontSize="16"
										   Margin="2" />
								<TextBlock x:Name="Remaining"
										   DockPanel.Dock="Top"
										   Text="{Binding Remaining, Mode=OneWay}"
										   Style="{DynamicResource DefaultTextStyleKey}"
										   FontSize="16"
										   Margin="2" />
							</DockPanel>
						</Border>

						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding State}"
										 Value="Waiting">
								<Setter TargetName="Mission"
										Property="Text"
										Value="(待機中)" />
							</DataTrigger>
							<DataTrigger Binding="{Binding State}"
										 Value="Waiting">
								<Setter TargetName="Remaining"
										Property="Text"
										Value="" />
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</StackPanel>

	</DockPanel>
</metro:MetroWindow>